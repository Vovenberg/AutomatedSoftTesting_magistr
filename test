import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
import matplotlib.pyplot
from sklearn.preprocessing import MinMaxScaler, StandardScaler
from functools import reduce
import scipy.optimize as sc


url = 'https://archive.ics.uci.edu/ml/machine-learning-databases/wine/wine.data'
df = pd.read_csv(url, header=None)
df.columns = ['метка класса', 'Alco', 'AppleAcid', '', '', '', '', '', '', '', '', '', '', '']
X,y = df.iloc[:]
# iloc[:, 1:].values,df.iloc[:,0].values
#
#
# x_train, x_test, y_train, y_test = \
#     train_test_split(X, y, test_size=0.3, random_state=0)
#
# stdsclr = ()
# x_train_norm = MinMaxScaler().fit_transform(x_train)
# x_test_standart = StandardScaler().fit_transform(x_test)
# print(x_test)


def error_func(X, Y, n, w0, w1):
    results = list(map(
        lambda x, y :
         y - (w0 + w1 * x) ** 2,
        X,
        Y))
    return reduce(lambda x, y : x + y, results)

w1s = np.linspace(1, 50, 40)
errors = list(map(lambda w1: error_func(df["Alco"], df['AppleAcid'],100,  50, w1), w1s))

min = sc.minimize_scalar(
    lambda w1: error_func(df["Alco"], df['AppleAcid'], 100, 50, w1), bounds=(-5,5))

plt.plot(errors, w1s, 'bs')
plt.xlabel('errors')
plt.ylabel('w1')
plt.show()
# error_func([1,3,6,4], [1,4,5,6], 5, 1, 2)

